{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "A project management api",
    "description": "An api for a product management application using typescript, restful api, express, postgresql",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "",
  "tags": [
    {
      "name": "Product management api"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/v1/user": {
      "post": {
        "tags": ["User"],
        "description": "Create new user",
        "parameters": [
          {
            "title": "user",
            "in": "body",
            "description": "User we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "Get all user in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "post": {
        "tags": ["Project"],
        "description": "Create new user",
        "parameters": [
          {
            "title": "user",
            "in": "body",
            "description": "User we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of book that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Project"],
        "summary": "Get book with given ID",
        "responses": {
          "200": {
            "description": "Book is found",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete book with given ID",
        "tags": ["Books"],
        "responses": {
          "200": {
            "description": "Book is deleted",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      },
      "put": {
        "summary": "Update book with give ID",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Book with new values of properties",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book is updated",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["first_name", "last_name", "email", "phone", "password"],
      "properties": {
        "id": {
          "type": "uuid",
          "uniqueItems": true
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/Books"
    }
  }
}
